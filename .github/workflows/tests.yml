name: Tests

on:
    push:
        branches:
            - master
            - dev
    pull_request:
        branches:
            - master
            - dev
    workflow_dispatch:
        inputs:
            run-on:
                description: 'Run on'
                required: true
                default: ubuntu-latest

env:
    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    PROJECT_PATH: .

jobs:
    checklicense:
        name: check if UNITY_LICENSE is set in github secrets
        runs-on: ${{ github.event.inputs.run-on || 'ubuntu-latest' }}
        outputs:
            is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
        steps:
            - name: Check whether unity activation requests should be done
              id: checklicense_job
              run: |
                  echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
                  echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"
    activation:
        needs: [checklicense]
        if: needs.checklicense.outputs.is_unity_license_set == 'false'
        name: Request activation file 🔑 (https://license.unity3d.com/manual)
        runs-on: ${{ github.event.inputs.run-on || 'ubuntu-latest' }}
        steps:
            # Request manual activation file
            - name: Request manual activation file
              id: getManualLicenseFile
                # https://github.com/game-ci/unity-request-activation-file/releases/
              uses: game-ci/unity-request-activation-file@v2.0-alpha-1
            # Upload artifact (Unity_v20XX.X.XXXX.alf)
            - name: Expose as artifact
              uses: actions/upload-artifact@v1
              with:
                  name: ${{ steps.getManualLicenseFile.outputs.filePath }}
                  path: ${{ steps.getManualLicenseFile.outputs.filePath }}

    test:
        needs: [checklicense]
        if: needs.checklicense.outputs.is_unity_license_set == 'true'
        name: Test all modes ✨
        runs-on: ${{ github.event.inputs.run-on || 'ubuntu-latest' }}
        steps:
            - uses: actions/checkout@v2
              with:
                  lfs: true
            - uses: actions/cache@v2.1.3
              with:
                  path: Library
                  key: test-Library-${{ matrix.targetPlatform }}
                  restore-keys: |
                      test-Library-
            # https://github.com/game-ci/unity-test-runner/releases/
            - uses: game-ci/unity-test-runner@v2
              id: testRunner
              with:
                  projectPath: ${{ env.PROJECT_PATH }}
                  testMode: all
                  customParameters: "-nographics"
                  githubToken: ${{ secrets.GITHUB_TOKEN }}
                  checkName: Test Results

            - uses: actions/upload-artifact@v2
              with:
                name: Test results (all modes)
                path: ${{ steps.testRunner.outputs.artifactsPath }}
